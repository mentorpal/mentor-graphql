service: mentor-graphql
frameworkVersion: '2 || 3'

plugins:
  - serverless-offline-ssm
  - serverless-offline
  - serverless-plugin-typescript
  - serverless-domain-manager

custom:
  serverless-offline-ssm:
    stages:
      - offline
  domain:
    offline: localmentorpal.org
    dev: api.devmentorpal.org
    qa: api.qamentorpal.org
    prod: api.mentorpal.org
  customDomain:
    domainName: ${self:custom.domain.${opt:stage, 'dev'}}
    basePath: 'graphql' # api root url becomes: api.mentorpal.org/graphql
    # certificateName: '*.mentorpal.org' didnt work
    # certificateName: 'c6107db7-c2ef-4e85-a21f-bee7d1ac008a' didnt work either
    stage: ${self:provider.stage}
    endpointType: 'regional'
    apiType: rest
    createRoute53Record: true
    securityPolicy: tls_1_2
    # we might have multiple services, better to manually invoke `sls create_domain`
    autoDomain: false

  stages:
    offline:
      LOG_LEVEL: 'trace'
      IS_SENTRY_ENABLED: 'false'
      API_SECRET: ${ssm:/mentorpal/newdev/shared/api_secret, ''}
      JWT_SECRET: ${ssm:/mentorpal/newdev/shared/jwt_secret, ''}
      MONGO_URI: ${ssm:/mentorpal/graphql/dev/mongo_uri, ''}
      NODE_ENV: 'careerfair-dev'
      STATIC_URL_BASE: 'https://static.devmentorpal.org/'
      CORS_ORIGIN: 'https://newdev.mentorpal.org,https://devmentorpal.org,.mentorpal.org,.devmentorpal.org,http://mentorpallocal.org,http://mentorpallocal.org/,.mentorpallocal.org,http://localhost:3000,http://localhost:3000/,https://chic-mousse-b794cb.netlify.app,https://chic-mousse-b794cb.netlify.app/'
      GOOGLE_CLIENT_ID: ${ssm:/mentorpal/qa/shared/GOOGLE_CLIENT_ID, ''}
      REFRESH_TOKEN_NAME: 'refreshTokenDev'
      WEBACL_ARN: ${ssm:/devmentorpal/api_firewall_arn, ''}
      DOMAIN: "devmentorpal.org"
      NOTIFY_ADMIN_ON_NEW_MENTOR: "false"
      CONCURRENT_LAMBDAS: "100"
      MONGO_CONNECTION_POOL_MAX: "5"
    dev:
      LOG_LEVEL: 'trace'
      IS_SENTRY_ENABLED: 'false'
      API_SECRET: ${ssm:/mentorpal/newdev/shared/api_secret, ''}
      JWT_SECRET: ${ssm:/mentorpal/newdev/shared/jwt_secret, ''}
      MONGO_URI: ${ssm:/mentorpal/graphql/dev/mongo_uri, ''}
      NODE_ENV: 'careerfair-dev'
      STATIC_URL_BASE: 'https://static.devmentorpal.org/'
      CORS_ORIGIN: 'https://newdev.mentorpal.org,https://devmentorpal.org,.mentorpal.org,.devmentorpal.org,http://mentorpallocal.org,http://mentorpallocal.org/,.mentorpallocal.org,http://localhost:3000,http://localhost:3000/,https://chic-mousse-b794cb.netlify.app,https://chic-mousse-b794cb.netlify.app/'
      GOOGLE_CLIENT_ID: ${ssm:/mentorpal/qa/shared/GOOGLE_CLIENT_ID, ''}
      REFRESH_TOKEN_NAME: 'refreshTokenDev'
      WEBACL_ARN: ${ssm:/devmentorpal/api_firewall_arn, ''}
      DOMAIN: "devmentorpal.org"
      NOTIFY_ADMIN_ON_NEW_MENTOR: "false"
      CONCURRENT_LAMBDAS: "100"
      MONGO_CONNECTION_POOL_MAX: "5"
    qa:
      LOG_LEVEL: 'debug'
      IS_SENTRY_ENABLED: 'true'
      API_SECRET: ${ssm:/mentorpal/v2/shared/api_secret, ''}
      JWT_SECRET: ${ssm:/mentorpal/v2/shared/jwt_secret, ''}
      MONGO_URI: ${ssm:/mentorpal/graphql/qa/mongo_uri, ''}
      NODE_ENV: 'careerfair-v2'
      STATIC_URL_BASE: 'https://static.qamentorpal.org/'
      CORS_ORIGIN: 'https://v2.mentorpal.org,https://qamentorpal.org,.mentorpal.org,.qamentorpal.org'
      GOOGLE_CLIENT_ID: ${ssm:/mentorpal/qa/shared/GOOGLE_CLIENT_ID, ''}
      REFRESH_TOKEN_NAME: 'refreshTokenQa'
      WEBACL_ARN: ${ssm:/qamentorpal/api_firewall_arn, ''}
      DOMAIN: "qamentorpal.org"
      NOTIFY_ADMIN_ON_NEW_MENTOR: "false"
      CONCURRENT_LAMBDAS: "100"
      MONGO_CONNECTION_POOL_MAX: "5"
    prod:
      LOG_LEVEL: 'info'
      IS_SENTRY_ENABLED: 'true'
      API_SECRET: ${ssm:/mentorpal/cf/shared/api_secret, ''}
      JWT_SECRET: ${ssm:/mentorpal/cf/shared/jwt_secret, ''}
      MONGO_URI: ${ssm:/mentorpal/graphql/prod/mongo_uri, ''}
      NODE_ENV: 'careerfair'
      STATIC_URL_BASE: 'https://static.mentorpal.org/'
      CORS_ORIGIN: 'https://careerfair.mentorpal.org,https://mentorpal.org,.mentorpal.org,https://chic-mousse-b794cb.netlify.app,https://chic-mousse-b794cb.netlify.app/'
      GOOGLE_CLIENT_ID: ${ssm:/mentorpal/prod/shared/GOOGLE_CLIENT_ID, ''}
      REFRESH_TOKEN_NAME: 'refreshTokenProd'
      WEBACL_ARN: ${ssm:/mentorpal/api_firewall_arn, ''}
      DOMAIN: "mentorpal.org"
      NOTIFY_ADMIN_ON_NEW_MENTOR: "true"
      CONCURRENT_LAMBDAS: "300"
      MONGO_CONNECTION_POOL_MAX: "5"

provider:
  name: aws
  region: ${opt:region, 'us-east-1'}
  stage: ${opt:stage, 'dev'} # stage is dev unless otherwise specified with --stage flag
  runtime: nodejs16.x
  endpointType: regional
  memorySize: 2048
  tracing:
    lambda: true
    apiGateway: true
  logRetentionInDays: 30
  apiGateway:
    minimumCompressionSize: 1024
  logs:
    restApi:
      # Enables HTTP access logs (default: true)
      accessLogging: true
      # # Log format to use for access logs
      # format: 'requestId: $context.requestId'
      # Enable execution logging (default: true)
      executionLogging: true
      level: INFO  # INFO or ERROR
      # Log full requests/responses for execution logging (default: true)
      fullExecutionData: true

  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    STAGE: ${self:provider.stage}
    NODE_ENV: careerfair-${self:provider.stage}
    API_SECRET: ${self:custom.stages.${self:provider.stage}.API_SECRET}
    LOG_LEVEL_GRAPHQL: ${self:custom.stages.${self:provider.stage}.LOG_LEVEL}
    JWT_SECRET: ${self:custom.stages.${self:provider.stage}.JWT_SECRET}
    IS_SENTRY_ENABLED: ${self:custom.stages.${self:provider.stage}.IS_SENTRY_ENABLED}
    SENTRY_DSN_MENTOR_GRAPHQL: ${ssm:/mentorpal/graphql/sentry_dsn}
    MONGO_URI: ${self:custom.stages.${self:provider.stage}.MONGO_URI}
    STATIC_URL_BASE: ${self:custom.stages.${self:provider.stage}.STATIC_URL_BASE}
    CORS_ORIGIN: ${self:custom.stages.${self:provider.stage}.CORS_ORIGIN}
    GOOGLE_CLIENT_ID: ${self:custom.stages.${self:provider.stage}.GOOGLE_CLIENT_ID}
    REFRESH_TOKEN_NAME: ${self:custom.stages.${self:provider.stage}.REFRESH_TOKEN_NAME}
    DOMAIN: ${self:custom.stages.${self:provider.stage}.DOMAIN}
    NOTIFY_ADMIN_ON_NEW_MENTOR: ${self:custom.stages.${self:provider.stage}.NOTIFY_ADMIN_ON_NEW_MENTOR}
    NOTIFY_ADMIN_EMAIL_FROM: ${ssm:/mentorpal/shared/notify_admin_email_from}
    NOTIFY_ADMIN_EMAILS_LIST: ${ssm:/mentorpal/shared/notify_admin_emails_list}
    CONCURRENT_LAMBDAS: ${self:custom.stages.${self:provider.stage}.CONCURRENT_LAMBDAS}
    MONGO_CONNECTION_POOL_MAX: ${self:custom.stages.${self:provider.stage}.MONGO_CONNECTION_POOL_MAX}

  stackTags:
    Environment: ${self:provider.stage}
    Source: 'serverless-framework'
    Project: 'mentorpal'
    Component: 'mentor-graphql'

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - ses:SendRawEmail
          Resource: "*"

functions:
  app:
    # lambda default timeout is 6 seconds, mentors can take 10+ seconds to load
    timeout: 20
    reservedConcurrency: '${self:custom.stages.${self:provider.stage}.CONCURRENT_LAMBDAS}'
    handler: ./src/lambda.handler
    events: 
      - http: 
          path: /
          method: GET
          cors: true
      - http: 
          path: /{proxy+}
          method: ANY
          cors:
            origins:
              - 'http://localhost:3000'
              - 'http://localhost:3000/'
              - 'https://chic-mousse-b794cb.netlify.app'
              - 'https://chic-mousse-b794cb.netlify.app/'
              - 'http://*.mentorpallocal.org'
              - 'http://mentorpallocal.org'
              - 'http://mentorpallocal.org/'
              - 'https://newdev.mentorpal.org'
              - 'https://v2.mentorpal.org'
              - 'https://careerfair.mentorpal.org'
              - 'https://devmentorpal.org'
              - 'https://*.devmentorpal.org'
              - 'https://qamentorpal.org'
              - 'https://*.qamentorpal.org'
              - 'https://mentorpal.org'
              - 'https://*.mentorpal.org'
            allowCredentials: true
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
              - X-Amzn-Trace-Id

resources:
  Resources:
    # fails to deploy first time because CF tries to create it before apigw 
    FirewallAssociation:
      Type: AWS::WAFv2::WebACLAssociation
      Properties:
        ResourceArn:
          Fn::Sub: 'arn:aws:apigateway:${AWS::Region}::/restapis/${ApiGatewayRestApi}/stages/${self:provider.stage}'
        WebACLArn: '${self:custom.stages.${self:provider.stage}.WEBACL_ARN}'